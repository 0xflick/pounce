use crate::{bitboard::Bitboard, movegen::Magic};

#[rustfmt::skip]
pub const BISHOP_MAGICS: [Magic; 64] = [
    Magic { mask: Bitboard(0x40201008040200), shift: 0x6, magic: 0x2060040105cc0080, offset: 0x0 },
    Magic { mask: Bitboard(0x402010080400), shift: 0x5, magic: 0xac04100242006000, offset: 0x40 },
    Magic { mask: Bitboard(0x4020100a00), shift: 0x5, magic: 0x15000818105022a, offset: 0x60 },
    Magic { mask: Bitboard(0x40221400), shift: 0x5, magic: 0x80044040840100a0, offset: 0x80 },
    Magic { mask: Bitboard(0x2442800), shift: 0x5, magic: 0x802021040002410, offset: 0xa0 },
    Magic { mask: Bitboard(0x204085000), shift: 0x5, magic: 0x208040c022009, offset: 0xc0 },
    Magic { mask: Bitboard(0x20408102000), shift: 0x5, magic: 0xa7009004200180, offset: 0xe0 },
    Magic { mask: Bitboard(0x2040810204000), shift: 0x6, magic: 0x2008090882010, offset: 0x100 },
    Magic { mask: Bitboard(0x20100804020000), shift: 0x5, magic: 0x202044a004011200, offset: 0x140 },
    Magic { mask: Bitboard(0x40201008040000), shift: 0x5, magic: 0x200004100240c100, offset: 0x160 },
    Magic { mask: Bitboard(0x4020100a0000), shift: 0x5, magic: 0x48040704010004, offset: 0x180 },
    Magic { mask: Bitboard(0x4022140000), shift: 0x5, magic: 0x80040400908200, offset: 0x1a0 },
    Magic { mask: Bitboard(0x244280000), shift: 0x5, magic: 0x84840080022, offset: 0x1c0 },
    Magic { mask: Bitboard(0x20408500000), shift: 0x5, magic: 0x1000888a202001a8, offset: 0x1e0 },
    Magic { mask: Bitboard(0x2040810200000), shift: 0x5, magic: 0x3180088490101180, offset: 0x200 },
    Magic { mask: Bitboard(0x4081020400000), shift: 0x5, magic: 0x101104108011018, offset: 0x220 },
    Magic { mask: Bitboard(0x10080402000200), shift: 0x5, magic: 0x8820084082140912, offset: 0x240 },
    Magic { mask: Bitboard(0x20100804000400), shift: 0x5, magic: 0x20020488820040, offset: 0x260 },
    Magic { mask: Bitboard(0x4020100a000a00), shift: 0x7, magic: 0x100b0800404009, offset: 0x280 },
    Magic { mask: Bitboard(0x402214001400), shift: 0x7, magic: 0x318000404208830, offset: 0x300 },
    Magic { mask: Bitboard(0x24428002800), shift: 0x7, magic: 0x404a848400a00440, offset: 0x380 },
    Magic { mask: Bitboard(0x2040850005000), shift: 0x7, magic: 0x40c208200408, offset: 0x400 },
    Magic { mask: Bitboard(0x4081020002000), shift: 0x5, magic: 0x2c8208c2086040, offset: 0x480 },
    Magic { mask: Bitboard(0x8102040004000), shift: 0x5, magic: 0xc80603008808, offset: 0x4a0 },
    Magic { mask: Bitboard(0x8040200020400), shift: 0x5, magic: 0x414840820200410, offset: 0x4c0 },
    Magic { mask: Bitboard(0x10080400040800), shift: 0x5, magic: 0x22081060010422, offset: 0x4e0 },
    Magic { mask: Bitboard(0x20100a000a1000), shift: 0x7, magic: 0x28402081c480500, offset: 0x500 },
    Magic { mask: Bitboard(0x40221400142200), shift: 0x9, magic: 0x1105080004040410, offset: 0x580 },
    Magic { mask: Bitboard(0x2442800284400), shift: 0x9, magic: 0x8104000a002106, offset: 0x780 },
    Magic { mask: Bitboard(0x4085000500800), shift: 0x7, magic: 0x40e8200048a1000, offset: 0x980 },
    Magic { mask: Bitboard(0x8102000201000), shift: 0x5, magic: 0x20208810a009000, offset: 0xa00 },
    Magic { mask: Bitboard(0x10204000402000), shift: 0x5, magic: 0x3005820220660608, offset: 0xa20 },
    Magic { mask: Bitboard(0x4020002040800), shift: 0x5, magic: 0x2830111118240400, offset: 0xa40 },
    Magic { mask: Bitboard(0x8040004081000), shift: 0x5, magic: 0x18908020d208422, offset: 0xa60 },
    Magic { mask: Bitboard(0x100a000a102000), shift: 0x7, magic: 0x41441000020423, offset: 0xa80 },
    Magic { mask: Bitboard(0x22140014224000), shift: 0x9, magic: 0x1024a0181480080, offset: 0xb00 },
    Magic { mask: Bitboard(0x44280028440200), shift: 0x9, magic: 0x2200484000080a0, offset: 0xd00 },
    Magic { mask: Bitboard(0x8500050080400), shift: 0x7, magic: 0x20248209230100, offset: 0xf00 },
    Magic { mask: Bitboard(0x10200020100800), shift: 0x5, magic: 0x10412a020101881b, offset: 0xf80 },
    Magic { mask: Bitboard(0x20400040201000), shift: 0x5, magic: 0x1284010220004404, offset: 0xfa0 },
    Magic { mask: Bitboard(0x2000204081000), shift: 0x5, magic: 0x14100208121000, offset: 0xfc0 },
    Magic { mask: Bitboard(0x4000408102000), shift: 0x5, magic: 0x141011090018200, offset: 0xfe0 },
    Magic { mask: Bitboard(0xa000a10204000), shift: 0x7, magic: 0x2220022081000, offset: 0x1000 },
    Magic { mask: Bitboard(0x14001422400000), shift: 0x7, magic: 0x10204010482202, offset: 0x1080 },
    Magic { mask: Bitboard(0x28002844020000), shift: 0x7, magic: 0x44011020800c00, offset: 0x1100 },
    Magic { mask: Bitboard(0x50005008040200), shift: 0x7, magic: 0x6801011000840d00, offset: 0x1180 },
    Magic { mask: Bitboard(0x20002010080400), shift: 0x5, magic: 0x2034100082000520, offset: 0x1200 },
    Magic { mask: Bitboard(0x40004020100800), shift: 0x5, magic: 0x180614012011c0, offset: 0x1220 },
    Magic { mask: Bitboard(0x20408102000), shift: 0x5, magic: 0x800809008200040, offset: 0x1240 },
    Magic { mask: Bitboard(0x40810204000), shift: 0x5, magic: 0x8804440404220102, offset: 0x1260 },
    Magic { mask: Bitboard(0xa1020400000), shift: 0x5, magic: 0x908032108220020, offset: 0x1280 },
    Magic { mask: Bitboard(0x142240000000), shift: 0x5, magic: 0x4002001084240498, offset: 0x12a0 },
    Magic { mask: Bitboard(0x284402000000), shift: 0x5, magic: 0x447802020824080, offset: 0x12c0 },
    Magic { mask: Bitboard(0x500804020000), shift: 0x5, magic: 0x408242044050200, offset: 0x12e0 },
    Magic { mask: Bitboard(0x201008040200), shift: 0x5, magic: 0xc0221401020004, offset: 0x1300 },
    Magic { mask: Bitboard(0x402010080400), shift: 0x5, magic: 0x204101082019202, offset: 0x1320 },
    Magic { mask: Bitboard(0x2040810204000), shift: 0x6, magic: 0x5021004100a01024, offset: 0x1340 },
    Magic { mask: Bitboard(0x4081020400000), shift: 0x5, magic: 0x600044042501009, offset: 0x1380 },
    Magic { mask: Bitboard(0xa102040000000), shift: 0x5, magic: 0x1041880480800, offset: 0x13a0 },
    Magic { mask: Bitboard(0x14224000000000), shift: 0x5, magic: 0x18092050208810, offset: 0x13c0 },
    Magic { mask: Bitboard(0x28440200000000), shift: 0x5, magic: 0xd00400008102408, offset: 0x13e0 },
    Magic { mask: Bitboard(0x50080402000000), shift: 0x5, magic: 0x8000040b1020085, offset: 0x1400 },
    Magic { mask: Bitboard(0x20100804020000), shift: 0x5, magic: 0x800110c10041040, offset: 0x1420 },
    Magic { mask: Bitboard(0x40201008040200), shift: 0x6, magic: 0x40404e0830410042, offset: 0x1440 },
];

#[rustfmt::skip]
pub const ROOK_MAGICS: [Magic; 64] = [
    Magic { mask: Bitboard(0x101010101017e), shift: 0xc, magic: 0x2080021020804000, offset: 0x0 },
    Magic { mask: Bitboard(0x202020202027c), shift: 0xb, magic: 0x40002000100442, offset: 0x1000 },
    Magic { mask: Bitboard(0x404040404047a), shift: 0xb, magic: 0x1001008c1002000, offset: 0x1800 },
    Magic { mask: Bitboard(0x8080808080876), shift: 0xb, magic: 0x2880048800801000, offset: 0x2000 },
    Magic { mask: Bitboard(0x1010101010106e), shift: 0xb, magic: 0x200141002000860, offset: 0x2800 },
    Magic { mask: Bitboard(0x2020202020205e), shift: 0xb, magic: 0x8100040008020100, offset: 0x3000 },
    Magic { mask: Bitboard(0x4040404040403e), shift: 0xb, magic: 0x20048018102000c, offset: 0x3800 },
    Magic { mask: Bitboard(0x8080808080807e), shift: 0xc, magic: 0x9100004700009522, offset: 0x4000 },
    Magic { mask: Bitboard(0x1010101017e00), shift: 0xb, magic: 0xc080800080204002, offset: 0x5000 },
    Magic { mask: Bitboard(0x2020202027c00), shift: 0xa, magic: 0x4000400020005001, offset: 0x5800 },
    Magic { mask: Bitboard(0x4040404047a00), shift: 0xa, magic: 0x1007004100200010, offset: 0x5c00 },
    Magic { mask: Bitboard(0x8080808087600), shift: 0xa, magic: 0x482200100a0160c0, offset: 0x6000 },
    Magic { mask: Bitboard(0x10101010106e00), shift: 0xa, magic: 0x81000800061100, offset: 0x6400 },
    Magic { mask: Bitboard(0x20202020205e00), shift: 0xa, magic: 0x8800200040080, offset: 0x6800 },
    Magic { mask: Bitboard(0x40404040403e00), shift: 0xa, magic: 0x6006102000428, offset: 0x6c00 },
    Magic { mask: Bitboard(0x80808080807e00), shift: 0xb, magic: 0x801449000080, offset: 0x7000 },
    Magic { mask: Bitboard(0x10101017e0100), shift: 0xb, magic: 0x4208000804000, offset: 0x7800 },
    Magic { mask: Bitboard(0x20202027c0200), shift: 0xa, magic: 0x80c0c002201000, offset: 0x8000 },
    Magic { mask: Bitboard(0x40404047a0400), shift: 0xa, magic: 0x9808020001008, offset: 0x8400 },
    Magic { mask: Bitboard(0x8080808760800), shift: 0xa, magic: 0x21828008025002, offset: 0x8800 },
    Magic { mask: Bitboard(0x101010106e1000), shift: 0xa, magic: 0x48008008800400, offset: 0x8c00 },
    Magic { mask: Bitboard(0x202020205e2000), shift: 0xa, magic: 0x80800c008200, offset: 0x9000 },
    Magic { mask: Bitboard(0x404040403e4000), shift: 0xa, magic: 0x440081021810, offset: 0x9400 },
    Magic { mask: Bitboard(0x808080807e8000), shift: 0xb, magic: 0xb208220001044184, offset: 0x9800 },
    Magic { mask: Bitboard(0x101017e010100), shift: 0xb, magic: 0x40812280024000, offset: 0xa000 },
    Magic { mask: Bitboard(0x202027c020200), shift: 0xa, magic: 0x2400a00040100040, offset: 0xa800 },
    Magic { mask: Bitboard(0x404047a040400), shift: 0xa, magic: 0x8010001080200088, offset: 0xac00 },
    Magic { mask: Bitboard(0x8080876080800), shift: 0xa, magic: 0x801001010010200c, offset: 0xb000 },
    Magic { mask: Bitboard(0x1010106e101000), shift: 0xa, magic: 0x20640280080080, offset: 0xb400 },
    Magic { mask: Bitboard(0x2020205e202000), shift: 0xa, magic: 0x20040080800200, offset: 0xb800 },
    Magic { mask: Bitboard(0x4040403e404000), shift: 0xa, magic: 0x1200020008042d, offset: 0xbc00 },
    Magic { mask: Bitboard(0x8080807e808000), shift: 0xb, magic: 0x41200004281, offset: 0xc000 },
    Magic { mask: Bitboard(0x1017e01010100), shift: 0xb, magic: 0x128401481800224, offset: 0xc800 },
    Magic { mask: Bitboard(0x2027c02020200), shift: 0xa, magic: 0x141083c000802000, offset: 0xd000 },
    Magic { mask: Bitboard(0x4047a04040400), shift: 0xa, magic: 0x143c08422001200, offset: 0xd400 },
    Magic { mask: Bitboard(0x8087608080800), shift: 0xa, magic: 0x1000900180800801, offset: 0xd800 },
    Magic { mask: Bitboard(0x10106e10101000), shift: 0xa, magic: 0x4210c80081800c00, offset: 0xdc00 },
    Magic { mask: Bitboard(0x20205e20202000), shift: 0xa, magic: 0xa4000200800480, offset: 0xe000 },
    Magic { mask: Bitboard(0x40403e40404000), shift: 0xa, magic: 0x18100204000821, offset: 0xe400 },
    Magic { mask: Bitboard(0x80807e80808000), shift: 0xb, magic: 0x220908062000104, offset: 0xe800 },
    Magic { mask: Bitboard(0x17e0101010100), shift: 0xb, magic: 0x1410904002208000, offset: 0xf000 },
    Magic { mask: Bitboard(0x27c0202020200), shift: 0xa, magic: 0x20c0400020008080, offset: 0xf800 },
    Magic { mask: Bitboard(0x47a0404040400), shift: 0xa, magic: 0x30e428032020021, offset: 0xfc00 },
    Magic { mask: Bitboard(0x8760808080800), shift: 0xa, magic: 0x100100100c90020, offset: 0x10000 },
    Magic { mask: Bitboard(0x106e1010101000), shift: 0xa, magic: 0x444800140080800a, offset: 0x10400 },
    Magic { mask: Bitboard(0x205e2020202000), shift: 0xa, magic: 0x201001400430028, offset: 0x10800 },
    Magic { mask: Bitboard(0x403e4040404000), shift: 0xa, magic: 0x1082102a88040041, offset: 0x10c00 },
    Magic { mask: Bitboard(0x807e8080808000), shift: 0xb, magic: 0xc002430492000c, offset: 0x11000 },
    Magic { mask: Bitboard(0x7e010101010100), shift: 0xb, magic: 0x829800904402300, offset: 0x11800 },
    Magic { mask: Bitboard(0x7c020202020200), shift: 0xa, magic: 0x1c0100420080020, offset: 0x12000 },
    Magic { mask: Bitboard(0x7a040404040400), shift: 0xa, magic: 0x8880a00286900080, offset: 0x12400 },
    Magic { mask: Bitboard(0x76080808080800), shift: 0xa, magic: 0xa080180100280, offset: 0x12800 },
    Magic { mask: Bitboard(0x6e101010101000), shift: 0xa, magic: 0x4a050018001100, offset: 0x12c00 },
    Magic { mask: Bitboard(0x5e202020202000), shift: 0xa, magic: 0x108c802200040080, offset: 0x13000 },
    Magic { mask: Bitboard(0x3e404040404000), shift: 0xa, magic: 0x12181015028400, offset: 0x13400 },
    Magic { mask: Bitboard(0x7e808080808000), shift: 0xb, magic: 0x201048502441200, offset: 0x13800 },
    Magic { mask: Bitboard(0x7e01010101010100), shift: 0xc, magic: 0xc254260100801042, offset: 0x14000 },
    Magic { mask: Bitboard(0x7c02020202020200), shift: 0xb, magic: 0x208040050019, offset: 0x15000 },
    Magic { mask: Bitboard(0x7a04040404040400), shift: 0xb, magic: 0x4020004100381021, offset: 0x15800 },
    Magic { mask: Bitboard(0x7608080808080800), shift: 0xb, magic: 0x30008864110021, offset: 0x16000 },
    Magic { mask: Bitboard(0x6e10101010101000), shift: 0xb, magic: 0xc182001008442006, offset: 0x16800 },
    Magic { mask: Bitboard(0x5e20202020202000), shift: 0xb, magic: 0x181000400020831, offset: 0x17000 },
    Magic { mask: Bitboard(0x3e40404040404000), shift: 0xb, magic: 0x4b004400820005, offset: 0x17800 },
    Magic { mask: Bitboard(0x7e80808080808000), shift: 0xc, magic: 0x44810280441022, offset: 0x18000 },
];
